//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Rock.CodeGeneration project
//     Changes to this file will be lost when the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// <copyright>
// Copyright by the Spark Development Network
//
// Licensed under the Rock Community License (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.rockrms.com/license
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// </copyright>
//

import { Guid } from "@Obsidian/Types";

/** The box that contains all the initialization information for the Family Pre-Registration block. */
export type FamilyPreRegistrationInitializationBox = {
    campusSchedulesAttributeGuid?: Guid | null;

    /** Filters the campus field by campus statuses. */
    campusStatusesFilter?: Guid[] | null;

    /** Filters the campus field by campus types. */
    campusTypesFilter?: Guid[] | null;

    /** The campus unique identifier to use by default when adding a new family. */
    defaultCampusGuid?: Guid | null;

    /**
     * Gets or sets the error message. A non-empty value indicates that
     * an error is preventing the block from being displayed.
     */
    errorMessage?: string | null;

    /**
     * Indicates whether the campus field is hidden.
     * If there is only one active campus then the campus field will not show.
     */
    isCampusHidden: boolean;

    /**
     * Indicates whether the campus field is optional.
     * If the campus field is required and there is only one active campus, then the campus field will not show and the single campus will be selected.
     */
    isCampusOptional: boolean;

    isPlannedSchedulePanelHidden: boolean;

    isPlannedVisitDateOptional: boolean;

    isPlannedVisitDatePanelHidden: boolean;

    /** Gets or sets the navigation urls. */
    navigationUrls?: Record<string, string> | null;

    /** Gets or sets the security grant token. */
    securityGrantToken?: string | null;
};
